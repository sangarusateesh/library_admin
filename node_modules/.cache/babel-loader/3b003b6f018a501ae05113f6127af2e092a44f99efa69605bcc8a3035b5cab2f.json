{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { gridColumnDefinitionsSelector } from '../../hooks/features/columns/gridColumnsSelector';\nimport { useGridSelector } from '../../hooks/utils/useGridSelector';\nimport { gridPreferencePanelStateSelector } from '../../hooks/features/preferencesPanel/gridPreferencePanelSelector';\nimport { GridPreferencePanelsValue } from '../../hooks/features/preferencesPanel/gridPreferencePanelsValue';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const GridPreferencesPanel = /*#__PURE__*/React.forwardRef(function GridPreferencesPanel(props, ref) {\n  const apiRef = useGridApiContext();\n  const columns = useGridSelector(apiRef, gridColumnDefinitionsSelector);\n  const rootProps = useGridRootProps();\n  const preferencePanelState = useGridSelector(apiRef, gridPreferencePanelStateSelector);\n  const panelContent = apiRef.current.unstable_applyPipeProcessors('preferencePanel', null, preferencePanelState.openedPanelValue ?? GridPreferencePanelsValue.filters);\n  return /*#__PURE__*/_jsx(rootProps.slots.panel, _extends({\n    ref: ref,\n    as: rootProps.slots.basePopper,\n    open: columns.length > 0 && preferencePanelState.open,\n    id: preferencePanelState.panelId,\n    \"aria-labelledby\": preferencePanelState.labelId\n  }, rootProps.slotProps?.panel, props, rootProps.slotProps?.basePopper, {\n    children: panelContent\n  }));\n});","map":{"version":3,"names":["_extends","React","gridColumnDefinitionsSelector","useGridSelector","gridPreferencePanelStateSelector","GridPreferencePanelsValue","useGridApiContext","useGridRootProps","jsx","_jsx","GridPreferencesPanel","forwardRef","props","ref","apiRef","columns","rootProps","preferencePanelState","panelContent","current","unstable_applyPipeProcessors","openedPanelValue","filters","slots","panel","as","basePopper","open","length","id","panelId","labelId","slotProps","children"],"sources":["/home/satheesh/Documents/React/lcommerce/node_modules/@mui/x-data-grid/components/panel/GridPreferencesPanel.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { gridColumnDefinitionsSelector } from '../../hooks/features/columns/gridColumnsSelector';\nimport { useGridSelector } from '../../hooks/utils/useGridSelector';\nimport { gridPreferencePanelStateSelector } from '../../hooks/features/preferencesPanel/gridPreferencePanelSelector';\nimport { GridPreferencePanelsValue } from '../../hooks/features/preferencesPanel/gridPreferencePanelsValue';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const GridPreferencesPanel = /*#__PURE__*/React.forwardRef(function GridPreferencesPanel(props, ref) {\n  const apiRef = useGridApiContext();\n  const columns = useGridSelector(apiRef, gridColumnDefinitionsSelector);\n  const rootProps = useGridRootProps();\n  const preferencePanelState = useGridSelector(apiRef, gridPreferencePanelStateSelector);\n  const panelContent = apiRef.current.unstable_applyPipeProcessors('preferencePanel', null, preferencePanelState.openedPanelValue ?? GridPreferencePanelsValue.filters);\n  return /*#__PURE__*/_jsx(rootProps.slots.panel, _extends({\n    ref: ref,\n    as: rootProps.slots.basePopper,\n    open: columns.length > 0 && preferencePanelState.open,\n    id: preferencePanelState.panelId,\n    \"aria-labelledby\": preferencePanelState.labelId\n  }, rootProps.slotProps?.panel, props, rootProps.slotProps?.basePopper, {\n    children: panelContent\n  }));\n});"],"mappings":"AAAA,OAAOA,QAAQ,MAAM,oCAAoC;AACzD,OAAO,KAAKC,KAAK,MAAM,OAAO;AAC9B,SAASC,6BAA6B,QAAQ,kDAAkD;AAChG,SAASC,eAAe,QAAQ,mCAAmC;AACnE,SAASC,gCAAgC,QAAQ,mEAAmE;AACpH,SAASC,yBAAyB,QAAQ,iEAAiE;AAC3G,SAASC,iBAAiB,QAAQ,qCAAqC;AACvE,SAASC,gBAAgB,QAAQ,oCAAoC;AACrE,SAASC,GAAG,IAAIC,IAAI,QAAQ,mBAAmB;AAC/C,OAAO,MAAMC,oBAAoB,GAAG,aAAaT,KAAK,CAACU,UAAU,CAAC,SAASD,oBAAoBA,CAACE,KAAK,EAAEC,GAAG,EAAE;EAC1G,MAAMC,MAAM,GAAGR,iBAAiB,CAAC,CAAC;EAClC,MAAMS,OAAO,GAAGZ,eAAe,CAACW,MAAM,EAAEZ,6BAA6B,CAAC;EACtE,MAAMc,SAAS,GAAGT,gBAAgB,CAAC,CAAC;EACpC,MAAMU,oBAAoB,GAAGd,eAAe,CAACW,MAAM,EAAEV,gCAAgC,CAAC;EACtF,MAAMc,YAAY,GAAGJ,MAAM,CAACK,OAAO,CAACC,4BAA4B,CAAC,iBAAiB,EAAE,IAAI,EAAEH,oBAAoB,CAACI,gBAAgB,IAAIhB,yBAAyB,CAACiB,OAAO,CAAC;EACrK,OAAO,aAAab,IAAI,CAACO,SAAS,CAACO,KAAK,CAACC,KAAK,EAAExB,QAAQ,CAAC;IACvDa,GAAG,EAAEA,GAAG;IACRY,EAAE,EAAET,SAAS,CAACO,KAAK,CAACG,UAAU;IAC9BC,IAAI,EAAEZ,OAAO,CAACa,MAAM,GAAG,CAAC,IAAIX,oBAAoB,CAACU,IAAI;IACrDE,EAAE,EAAEZ,oBAAoB,CAACa,OAAO;IAChC,iBAAiB,EAAEb,oBAAoB,CAACc;EAC1C,CAAC,EAAEf,SAAS,CAACgB,SAAS,EAAER,KAAK,EAAEZ,KAAK,EAAEI,SAAS,CAACgB,SAAS,EAAEN,UAAU,EAAE;IACrEO,QAAQ,EAAEf;EACZ,CAAC,CAAC,CAAC;AACL,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}