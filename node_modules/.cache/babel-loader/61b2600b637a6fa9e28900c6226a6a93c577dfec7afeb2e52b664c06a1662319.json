{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { styled } from '@mui/system';\nimport { unstable_composeClasses as composeClasses } from '@mui/utils';\nimport clsx from 'clsx';\nimport { useGridSelector } from '../../hooks/utils/useGridSelector';\nimport { gridExpandedRowCountSelector } from '../../hooks/features/filter/gridFilterSelector';\nimport { gridRowCountSelector, gridRowsLoadingSelector } from '../../hooks/features/rows/gridRowsSelector';\nimport { gridDimensionsSelector } from '../../hooks/features/dimensions';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { useGridVisibleRows } from '../../hooks/utils/useGridVisibleRows';\nimport { getMinimalContentHeight } from '../../hooks/features/rows/gridRowsUtils';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst GridOverlayWrapperRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'OverlayWrapper',\n  shouldForwardProp: prop => prop !== 'overlayType',\n  overridesResolver: (props, styles) => styles.overlayWrapper\n})(({\n  overlayType\n}) => ({\n  position: 'sticky',\n  // To stay in place while scrolling\n  top: 'var(--DataGrid-headersTotalHeight)',\n  left: 0,\n  width: 0,\n  // To stay above the content instead of shifting it down\n  height: 0,\n  // To stay above the content instead of shifting it down\n  zIndex: overlayType === 'loadingOverlay' ? 5 // Should be above pinned columns, pinned rows, and detail panel\n  : 4 // Should be above pinned columns and detail panel\n}));\nconst GridOverlayWrapperInner = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'OverlayWrapperInner',\n  shouldForwardProp: prop => prop !== 'overlayType',\n  overridesResolver: (props, styles) => styles.overlayWrapperInner\n})({});\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['overlayWrapper'],\n    inner: ['overlayWrapperInner']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nfunction GridOverlayWrapper(props) {\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const currentPage = useGridVisibleRows(apiRef, rootProps);\n  const dimensions = useGridSelector(apiRef, gridDimensionsSelector);\n  let height = dimensions.viewportOuterSize.height - dimensions.headersTotalHeight - (dimensions.hasScrollX ? dimensions.scrollbarSize : 0);\n  if (rootProps.autoHeight && currentPage.rows.length === 0 || height === 0) {\n    height = getMinimalContentHeight(apiRef);\n  }\n  const classes = useUtilityClasses(_extends({}, props, {\n    classes: rootProps.classes\n  }));\n  return /*#__PURE__*/_jsx(GridOverlayWrapperRoot, {\n    className: clsx(classes.root),\n    overlayType: props.overlayType,\n    children: /*#__PURE__*/_jsx(GridOverlayWrapperInner, _extends({\n      className: clsx(classes.inner),\n      style: {\n        height,\n        width: dimensions.viewportOuterSize.width\n      }\n    }, props))\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? GridOverlayWrapper.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  overlayType: PropTypes.string.isRequired\n} : void 0;\nexport function GridOverlays() {\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const totalRowCount = useGridSelector(apiRef, gridRowCountSelector);\n  const visibleRowCount = useGridSelector(apiRef, gridExpandedRowCountSelector);\n  const loading = useGridSelector(apiRef, gridRowsLoadingSelector);\n  const showNoRowsOverlay = !loading && totalRowCount === 0;\n  const showNoResultsOverlay = !loading && totalRowCount > 0 && visibleRowCount === 0;\n  let overlay = null;\n  let overlayType = '';\n  if (showNoRowsOverlay) {\n    overlay = /*#__PURE__*/_jsx(rootProps.slots.noRowsOverlay, _extends({}, rootProps.slotProps?.noRowsOverlay));\n    overlayType = 'noRowsOverlay';\n  }\n  if (showNoResultsOverlay) {\n    overlay = /*#__PURE__*/_jsx(rootProps.slots.noResultsOverlay, _extends({}, rootProps.slotProps?.noResultsOverlay));\n    overlayType = 'noResultsOverlay';\n  }\n  if (loading) {\n    overlay = /*#__PURE__*/_jsx(rootProps.slots.loadingOverlay, _extends({}, rootProps.slotProps?.loadingOverlay));\n    overlayType = 'loadingOverlay';\n  }\n  if (overlay === null) {\n    return null;\n  }\n  return /*#__PURE__*/_jsx(GridOverlayWrapper, {\n    overlayType: overlayType,\n    children: overlay\n  });\n}","map":{"version":3,"names":["_extends","React","PropTypes","styled","unstable_composeClasses","composeClasses","clsx","useGridSelector","gridExpandedRowCountSelector","gridRowCountSelector","gridRowsLoadingSelector","gridDimensionsSelector","useGridApiContext","useGridRootProps","useGridVisibleRows","getMinimalContentHeight","getDataGridUtilityClass","jsx","_jsx","GridOverlayWrapperRoot","name","slot","shouldForwardProp","prop","overridesResolver","props","styles","overlayWrapper","overlayType","position","top","left","width","height","zIndex","GridOverlayWrapperInner","overlayWrapperInner","useUtilityClasses","ownerState","classes","slots","root","inner","GridOverlayWrapper","apiRef","rootProps","currentPage","dimensions","viewportOuterSize","headersTotalHeight","hasScrollX","scrollbarSize","autoHeight","rows","length","className","children","style","process","env","NODE_ENV","propTypes","string","isRequired","GridOverlays","totalRowCount","visibleRowCount","loading","showNoRowsOverlay","showNoResultsOverlay","overlay","noRowsOverlay","slotProps","noResultsOverlay","loadingOverlay"],"sources":["/home/satheesh/Documents/React/lcommerce/node_modules/@mui/x-data-grid/components/base/GridOverlays.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { styled } from '@mui/system';\nimport { unstable_composeClasses as composeClasses } from '@mui/utils';\nimport clsx from 'clsx';\nimport { useGridSelector } from '../../hooks/utils/useGridSelector';\nimport { gridExpandedRowCountSelector } from '../../hooks/features/filter/gridFilterSelector';\nimport { gridRowCountSelector, gridRowsLoadingSelector } from '../../hooks/features/rows/gridRowsSelector';\nimport { gridDimensionsSelector } from '../../hooks/features/dimensions';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { useGridVisibleRows } from '../../hooks/utils/useGridVisibleRows';\nimport { getMinimalContentHeight } from '../../hooks/features/rows/gridRowsUtils';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst GridOverlayWrapperRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'OverlayWrapper',\n  shouldForwardProp: prop => prop !== 'overlayType',\n  overridesResolver: (props, styles) => styles.overlayWrapper\n})(({\n  overlayType\n}) => ({\n  position: 'sticky',\n  // To stay in place while scrolling\n  top: 'var(--DataGrid-headersTotalHeight)',\n  left: 0,\n  width: 0,\n  // To stay above the content instead of shifting it down\n  height: 0,\n  // To stay above the content instead of shifting it down\n  zIndex: overlayType === 'loadingOverlay' ? 5 // Should be above pinned columns, pinned rows, and detail panel\n  : 4 // Should be above pinned columns and detail panel\n}));\nconst GridOverlayWrapperInner = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'OverlayWrapperInner',\n  shouldForwardProp: prop => prop !== 'overlayType',\n  overridesResolver: (props, styles) => styles.overlayWrapperInner\n})({});\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['overlayWrapper'],\n    inner: ['overlayWrapperInner']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nfunction GridOverlayWrapper(props) {\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const currentPage = useGridVisibleRows(apiRef, rootProps);\n  const dimensions = useGridSelector(apiRef, gridDimensionsSelector);\n  let height = dimensions.viewportOuterSize.height - dimensions.headersTotalHeight - (dimensions.hasScrollX ? dimensions.scrollbarSize : 0);\n  if (rootProps.autoHeight && currentPage.rows.length === 0 || height === 0) {\n    height = getMinimalContentHeight(apiRef);\n  }\n  const classes = useUtilityClasses(_extends({}, props, {\n    classes: rootProps.classes\n  }));\n  return /*#__PURE__*/_jsx(GridOverlayWrapperRoot, {\n    className: clsx(classes.root),\n    overlayType: props.overlayType,\n    children: /*#__PURE__*/_jsx(GridOverlayWrapperInner, _extends({\n      className: clsx(classes.inner),\n      style: {\n        height,\n        width: dimensions.viewportOuterSize.width\n      }\n    }, props))\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? GridOverlayWrapper.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  overlayType: PropTypes.string.isRequired\n} : void 0;\nexport function GridOverlays() {\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const totalRowCount = useGridSelector(apiRef, gridRowCountSelector);\n  const visibleRowCount = useGridSelector(apiRef, gridExpandedRowCountSelector);\n  const loading = useGridSelector(apiRef, gridRowsLoadingSelector);\n  const showNoRowsOverlay = !loading && totalRowCount === 0;\n  const showNoResultsOverlay = !loading && totalRowCount > 0 && visibleRowCount === 0;\n  let overlay = null;\n  let overlayType = '';\n  if (showNoRowsOverlay) {\n    overlay = /*#__PURE__*/_jsx(rootProps.slots.noRowsOverlay, _extends({}, rootProps.slotProps?.noRowsOverlay));\n    overlayType = 'noRowsOverlay';\n  }\n  if (showNoResultsOverlay) {\n    overlay = /*#__PURE__*/_jsx(rootProps.slots.noResultsOverlay, _extends({}, rootProps.slotProps?.noResultsOverlay));\n    overlayType = 'noResultsOverlay';\n  }\n  if (loading) {\n    overlay = /*#__PURE__*/_jsx(rootProps.slots.loadingOverlay, _extends({}, rootProps.slotProps?.loadingOverlay));\n    overlayType = 'loadingOverlay';\n  }\n  if (overlay === null) {\n    return null;\n  }\n  return /*#__PURE__*/_jsx(GridOverlayWrapper, {\n    overlayType: overlayType,\n    children: overlay\n  });\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}