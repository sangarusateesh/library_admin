{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport TablePagination, { tablePaginationClasses } from '@mui/material/TablePagination';\nimport { styled } from '@mui/material/styles';\nimport { useGridSelector } from '../hooks/utils/useGridSelector';\nimport { useGridApiContext } from '../hooks/utils/useGridApiContext';\nimport { useGridRootProps } from '../hooks/utils/useGridRootProps';\nimport { gridPaginationModelSelector, gridPaginationRowCountSelector } from '../hooks/features/pagination/gridPaginationSelector';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst GridPaginationRoot = styled(TablePagination)(({\n  theme\n}) => ({\n  [`& .${tablePaginationClasses.selectLabel}`]: {\n    display: 'none',\n    [theme.breakpoints.up('sm')]: {\n      display: 'block'\n    }\n  },\n  [`& .${tablePaginationClasses.input}`]: {\n    display: 'none',\n    [theme.breakpoints.up('sm')]: {\n      display: 'inline-flex'\n    }\n  }\n}));\n\n// A mutable version of a readonly array.\n\nconst GridPagination = /*#__PURE__*/React.forwardRef(function GridPagination(props, ref) {\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const paginationModel = useGridSelector(apiRef, gridPaginationModelSelector);\n  const rowCount = useGridSelector(apiRef, gridPaginationRowCountSelector);\n  const lastPage = React.useMemo(() => {\n    const calculatedValue = Math.ceil(rowCount / (paginationModel.pageSize || 1)) - 1;\n    return Math.max(0, calculatedValue);\n  }, [rowCount, paginationModel.pageSize]);\n  const handlePageSizeChange = React.useCallback(event => {\n    const pageSize = Number(event.target.value);\n    apiRef.current.setPageSize(pageSize);\n  }, [apiRef]);\n  const handlePageChange = React.useCallback((_, page) => {\n    apiRef.current.setPage(page);\n  }, [apiRef]);\n  const isPageSizeIncludedInPageSizeOptions = pageSize => {\n    for (let i = 0; i < rootProps.pageSizeOptions.length; i += 1) {\n      const option = rootProps.pageSizeOptions[i];\n      if (typeof option === 'number') {\n        if (option === pageSize) {\n          return true;\n        }\n      } else if (option.value === pageSize) {\n        return true;\n      }\n    }\n    return false;\n  };\n  if (process.env.NODE_ENV !== 'production') {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    const warnedOnceMissingInPageSizeOptions = React.useRef(false);\n    const pageSize = rootProps.paginationModel?.pageSize ?? paginationModel.pageSize;\n    if (!warnedOnceMissingInPageSizeOptions.current && !rootProps.autoPageSize && !isPageSizeIncludedInPageSizeOptions(pageSize)) {\n      console.warn([`MUI X: The page size \\`${paginationModel.pageSize}\\` is not preset in the \\`pageSizeOptions\\`.`, `Add it to show the pagination select.`].join('\\n'));\n      warnedOnceMissingInPageSizeOptions.current = true;\n    }\n  }\n  const pageSizeOptions = isPageSizeIncludedInPageSizeOptions(paginationModel.pageSize) ? rootProps.pageSizeOptions : [];\n  return /*#__PURE__*/_jsx(GridPaginationRoot, _extends({\n    ref: ref,\n    component: \"div\",\n    count: rowCount,\n    page: paginationModel.page <= lastPage ? paginationModel.page : lastPage\n    // TODO: Remove the cast once the type is fixed in Material UI and that the min Material UI version\n    // for x-data-grid is past the fix.\n    // Note that Material UI will not mutate the array, so this is safe.\n    ,\n\n    rowsPerPageOptions: pageSizeOptions,\n    rowsPerPage: paginationModel.pageSize,\n    onPageChange: handlePageChange,\n    onRowsPerPageChange: handlePageSizeChange\n  }, apiRef.current.getLocaleText('MuiTablePagination'), props));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridPagination.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  component: PropTypes.elementType\n} : void 0;\nexport { GridPagination };","map":{"version":3,"names":["_extends","React","PropTypes","TablePagination","tablePaginationClasses","styled","useGridSelector","useGridApiContext","useGridRootProps","gridPaginationModelSelector","gridPaginationRowCountSelector","jsx","_jsx","GridPaginationRoot","theme","selectLabel","display","breakpoints","up","input","GridPagination","forwardRef","props","ref","apiRef","rootProps","paginationModel","rowCount","lastPage","useMemo","calculatedValue","Math","ceil","pageSize","max","handlePageSizeChange","useCallback","event","Number","target","value","current","setPageSize","handlePageChange","_","page","setPage","isPageSizeIncludedInPageSizeOptions","i","pageSizeOptions","length","option","process","env","NODE_ENV","warnedOnceMissingInPageSizeOptions","useRef","autoPageSize","console","warn","join","component","count","rowsPerPageOptions","rowsPerPage","onPageChange","onRowsPerPageChange","getLocaleText","propTypes","elementType"],"sources":["/home/satheesh/Documents/React/lcommerce/node_modules/@mui/x-data-grid/components/GridPagination.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport TablePagination, { tablePaginationClasses } from '@mui/material/TablePagination';\nimport { styled } from '@mui/material/styles';\nimport { useGridSelector } from '../hooks/utils/useGridSelector';\nimport { useGridApiContext } from '../hooks/utils/useGridApiContext';\nimport { useGridRootProps } from '../hooks/utils/useGridRootProps';\nimport { gridPaginationModelSelector, gridPaginationRowCountSelector } from '../hooks/features/pagination/gridPaginationSelector';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst GridPaginationRoot = styled(TablePagination)(({\n  theme\n}) => ({\n  [`& .${tablePaginationClasses.selectLabel}`]: {\n    display: 'none',\n    [theme.breakpoints.up('sm')]: {\n      display: 'block'\n    }\n  },\n  [`& .${tablePaginationClasses.input}`]: {\n    display: 'none',\n    [theme.breakpoints.up('sm')]: {\n      display: 'inline-flex'\n    }\n  }\n}));\n\n// A mutable version of a readonly array.\n\nconst GridPagination = /*#__PURE__*/React.forwardRef(function GridPagination(props, ref) {\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const paginationModel = useGridSelector(apiRef, gridPaginationModelSelector);\n  const rowCount = useGridSelector(apiRef, gridPaginationRowCountSelector);\n  const lastPage = React.useMemo(() => {\n    const calculatedValue = Math.ceil(rowCount / (paginationModel.pageSize || 1)) - 1;\n    return Math.max(0, calculatedValue);\n  }, [rowCount, paginationModel.pageSize]);\n  const handlePageSizeChange = React.useCallback(event => {\n    const pageSize = Number(event.target.value);\n    apiRef.current.setPageSize(pageSize);\n  }, [apiRef]);\n  const handlePageChange = React.useCallback((_, page) => {\n    apiRef.current.setPage(page);\n  }, [apiRef]);\n  const isPageSizeIncludedInPageSizeOptions = pageSize => {\n    for (let i = 0; i < rootProps.pageSizeOptions.length; i += 1) {\n      const option = rootProps.pageSizeOptions[i];\n      if (typeof option === 'number') {\n        if (option === pageSize) {\n          return true;\n        }\n      } else if (option.value === pageSize) {\n        return true;\n      }\n    }\n    return false;\n  };\n  if (process.env.NODE_ENV !== 'production') {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    const warnedOnceMissingInPageSizeOptions = React.useRef(false);\n    const pageSize = rootProps.paginationModel?.pageSize ?? paginationModel.pageSize;\n    if (!warnedOnceMissingInPageSizeOptions.current && !rootProps.autoPageSize && !isPageSizeIncludedInPageSizeOptions(pageSize)) {\n      console.warn([`MUI X: The page size \\`${paginationModel.pageSize}\\` is not preset in the \\`pageSizeOptions\\`.`, `Add it to show the pagination select.`].join('\\n'));\n      warnedOnceMissingInPageSizeOptions.current = true;\n    }\n  }\n  const pageSizeOptions = isPageSizeIncludedInPageSizeOptions(paginationModel.pageSize) ? rootProps.pageSizeOptions : [];\n  return /*#__PURE__*/_jsx(GridPaginationRoot, _extends({\n    ref: ref,\n    component: \"div\",\n    count: rowCount,\n    page: paginationModel.page <= lastPage ? paginationModel.page : lastPage\n    // TODO: Remove the cast once the type is fixed in Material UI and that the min Material UI version\n    // for x-data-grid is past the fix.\n    // Note that Material UI will not mutate the array, so this is safe.\n    ,\n    rowsPerPageOptions: pageSizeOptions,\n    rowsPerPage: paginationModel.pageSize,\n    onPageChange: handlePageChange,\n    onRowsPerPageChange: handlePageSizeChange\n  }, apiRef.current.getLocaleText('MuiTablePagination'), props));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridPagination.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  component: PropTypes.elementType\n} : void 0;\nexport { GridPagination };"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}