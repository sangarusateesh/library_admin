{"ast":null,"code":"import * as React from 'react';\nimport { styled } from '@mui/system';\nimport { unstable_composeClasses as composeClasses, unstable_useForkRef as useForkRef, unstable_useEventCallback as useEventCallback } from '@mui/utils';\nimport { useOnMount } from '../../hooks/utils/useOnMount';\nimport { useGridPrivateApiContext } from '../../hooks/utils/useGridPrivateApiContext';\nimport { gridDimensionsSelector, useGridSelector } from '../../hooks';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = (ownerState, position) => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['scrollbar', `scrollbar--${position}`],\n    content: ['scrollbarContent']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst Scrollbar = styled('div')({\n  position: 'absolute',\n  display: 'inline-block',\n  zIndex: 6,\n  '& > div': {\n    display: 'inline-block'\n  },\n  // In macOS Safari and Gnome Web, scrollbars are overlaid and don't affect the layout. So we consider\n  // their size to be 0px throughout all the calculations, but the floating scrollbar container does need\n  // to appear and have a real size. We set it to 14px because it seems like an acceptable value and we\n  // don't have a method to find the required size for scrollbars on those platforms.\n  '--size': 'calc(max(var(--DataGrid-scrollbarSize), 14px))'\n});\nconst ScrollbarVertical = styled(Scrollbar)({\n  width: 'var(--size)',\n  height: 'calc(var(--DataGrid-hasScrollY) * (100% - var(--DataGrid-topContainerHeight) - var(--DataGrid-bottomContainerHeight) - var(--DataGrid-hasScrollX) * var(--DataGrid-scrollbarSize)))',\n  overflowY: 'auto',\n  overflowX: 'hidden',\n  // Disable focus-visible style, it's a scrollbar.\n  outline: 0,\n  '& > div': {\n    width: 'var(--size)'\n  },\n  top: 'var(--DataGrid-topContainerHeight)',\n  right: '0px'\n});\nconst ScrollbarHorizontal = styled(Scrollbar)({\n  width: '100%',\n  height: 'var(--size)',\n  overflowY: 'hidden',\n  overflowX: 'auto',\n  // Disable focus-visible style, it's a scrollbar.\n  outline: 0,\n  '& > div': {\n    height: 'var(--size)'\n  },\n  bottom: '0px'\n});\nconst Content = styled('div')({\n  display: 'inline-block'\n});\nconst GridVirtualScrollbar = /*#__PURE__*/React.forwardRef(function GridVirtualScrollbar(props, ref) {\n  const apiRef = useGridPrivateApiContext();\n  const rootProps = useGridRootProps();\n  const isLocked = React.useRef(false);\n  const lastPosition = React.useRef(0);\n  const scrollbarRef = React.useRef(null);\n  const contentRef = React.useRef(null);\n  const classes = useUtilityClasses(rootProps, props.position);\n  const dimensions = useGridSelector(apiRef, gridDimensionsSelector);\n  const propertyDimension = props.position === 'vertical' ? 'height' : 'width';\n  const propertyScroll = props.position === 'vertical' ? 'scrollTop' : 'scrollLeft';\n  const hasScroll = props.position === 'vertical' ? dimensions.hasScrollX : dimensions.hasScrollY;\n  const contentSize = dimensions.minimumSize[propertyDimension] + (hasScroll ? dimensions.scrollbarSize : 0);\n  const scrollbarSize = props.position === 'vertical' ? dimensions.viewportInnerSize.height : dimensions.viewportOuterSize.width;\n  const scrollbarInnerSize = scrollbarSize * (contentSize / dimensions.viewportOuterSize[propertyDimension]);\n  const onScrollerScroll = useEventCallback(() => {\n    const scroller = apiRef.current.virtualScrollerRef.current;\n    const scrollbar = scrollbarRef.current;\n    if (scroller[propertyScroll] === lastPosition.current) {\n      return;\n    }\n    if (isLocked.current) {\n      isLocked.current = false;\n      return;\n    }\n    isLocked.current = true;\n    const value = scroller[propertyScroll] / contentSize;\n    scrollbar[propertyScroll] = value * scrollbarInnerSize;\n    lastPosition.current = scroller[propertyScroll];\n  });\n  const onScrollbarScroll = useEventCallback(() => {\n    const scroller = apiRef.current.virtualScrollerRef.current;\n    const scrollbar = scrollbarRef.current;\n    if (isLocked.current) {\n      isLocked.current = false;\n      return;\n    }\n    isLocked.current = true;\n    const value = scrollbar[propertyScroll] / scrollbarInnerSize;\n    scroller[propertyScroll] = value * contentSize;\n  });\n  useOnMount(() => {\n    const scroller = apiRef.current.virtualScrollerRef.current;\n    const scrollbar = scrollbarRef.current;\n    scroller.addEventListener('scroll', onScrollerScroll, {\n      capture: true\n    });\n    scrollbar.addEventListener('scroll', onScrollbarScroll, {\n      capture: true\n    });\n    return () => {\n      scroller.removeEventListener('scroll', onScrollerScroll, {\n        capture: true\n      });\n      scrollbar.removeEventListener('scroll', onScrollbarScroll, {\n        capture: true\n      });\n    };\n  });\n  React.useEffect(() => {\n    const content = contentRef.current;\n    content.style.setProperty(propertyDimension, `${scrollbarInnerSize}px`);\n  }, [scrollbarInnerSize, propertyDimension]);\n  const Container = props.position === 'vertical' ? ScrollbarVertical : ScrollbarHorizontal;\n  return /*#__PURE__*/_jsx(Container, {\n    ref: useForkRef(ref, scrollbarRef),\n    className: classes.root,\n    tabIndex: -1,\n    children: /*#__PURE__*/_jsx(Content, {\n      ref: contentRef,\n      className: classes.content\n    })\n  });\n});\nexport { GridVirtualScrollbar };","map":{"version":3,"names":["React","styled","unstable_composeClasses","composeClasses","unstable_useForkRef","useForkRef","unstable_useEventCallback","useEventCallback","useOnMount","useGridPrivateApiContext","gridDimensionsSelector","useGridSelector","useGridRootProps","getDataGridUtilityClass","jsx","_jsx","useUtilityClasses","ownerState","position","classes","slots","root","content","Scrollbar","display","zIndex","ScrollbarVertical","width","height","overflowY","overflowX","outline","top","right","ScrollbarHorizontal","bottom","Content","GridVirtualScrollbar","forwardRef","props","ref","apiRef","rootProps","isLocked","useRef","lastPosition","scrollbarRef","contentRef","dimensions","propertyDimension","propertyScroll","hasScroll","hasScrollX","hasScrollY","contentSize","minimumSize","scrollbarSize","viewportInnerSize","viewportOuterSize","scrollbarInnerSize","onScrollerScroll","scroller","current","virtualScrollerRef","scrollbar","value","onScrollbarScroll","addEventListener","capture","removeEventListener","useEffect","style","setProperty","Container","className","tabIndex","children"],"sources":["/home/satheesh/Documents/React/lcommerce/node_modules/@mui/x-data-grid/components/virtualization/GridVirtualScrollbar.js"],"sourcesContent":["import * as React from 'react';\nimport { styled } from '@mui/system';\nimport { unstable_composeClasses as composeClasses, unstable_useForkRef as useForkRef, unstable_useEventCallback as useEventCallback } from '@mui/utils';\nimport { useOnMount } from '../../hooks/utils/useOnMount';\nimport { useGridPrivateApiContext } from '../../hooks/utils/useGridPrivateApiContext';\nimport { gridDimensionsSelector, useGridSelector } from '../../hooks';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = (ownerState, position) => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['scrollbar', `scrollbar--${position}`],\n    content: ['scrollbarContent']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst Scrollbar = styled('div')({\n  position: 'absolute',\n  display: 'inline-block',\n  zIndex: 6,\n  '& > div': {\n    display: 'inline-block'\n  },\n  // In macOS Safari and Gnome Web, scrollbars are overlaid and don't affect the layout. So we consider\n  // their size to be 0px throughout all the calculations, but the floating scrollbar container does need\n  // to appear and have a real size. We set it to 14px because it seems like an acceptable value and we\n  // don't have a method to find the required size for scrollbars on those platforms.\n  '--size': 'calc(max(var(--DataGrid-scrollbarSize), 14px))'\n});\nconst ScrollbarVertical = styled(Scrollbar)({\n  width: 'var(--size)',\n  height: 'calc(var(--DataGrid-hasScrollY) * (100% - var(--DataGrid-topContainerHeight) - var(--DataGrid-bottomContainerHeight) - var(--DataGrid-hasScrollX) * var(--DataGrid-scrollbarSize)))',\n  overflowY: 'auto',\n  overflowX: 'hidden',\n  // Disable focus-visible style, it's a scrollbar.\n  outline: 0,\n  '& > div': {\n    width: 'var(--size)'\n  },\n  top: 'var(--DataGrid-topContainerHeight)',\n  right: '0px'\n});\nconst ScrollbarHorizontal = styled(Scrollbar)({\n  width: '100%',\n  height: 'var(--size)',\n  overflowY: 'hidden',\n  overflowX: 'auto',\n  // Disable focus-visible style, it's a scrollbar.\n  outline: 0,\n  '& > div': {\n    height: 'var(--size)'\n  },\n  bottom: '0px'\n});\nconst Content = styled('div')({\n  display: 'inline-block'\n});\nconst GridVirtualScrollbar = /*#__PURE__*/React.forwardRef(function GridVirtualScrollbar(props, ref) {\n  const apiRef = useGridPrivateApiContext();\n  const rootProps = useGridRootProps();\n  const isLocked = React.useRef(false);\n  const lastPosition = React.useRef(0);\n  const scrollbarRef = React.useRef(null);\n  const contentRef = React.useRef(null);\n  const classes = useUtilityClasses(rootProps, props.position);\n  const dimensions = useGridSelector(apiRef, gridDimensionsSelector);\n  const propertyDimension = props.position === 'vertical' ? 'height' : 'width';\n  const propertyScroll = props.position === 'vertical' ? 'scrollTop' : 'scrollLeft';\n  const hasScroll = props.position === 'vertical' ? dimensions.hasScrollX : dimensions.hasScrollY;\n  const contentSize = dimensions.minimumSize[propertyDimension] + (hasScroll ? dimensions.scrollbarSize : 0);\n  const scrollbarSize = props.position === 'vertical' ? dimensions.viewportInnerSize.height : dimensions.viewportOuterSize.width;\n  const scrollbarInnerSize = scrollbarSize * (contentSize / dimensions.viewportOuterSize[propertyDimension]);\n  const onScrollerScroll = useEventCallback(() => {\n    const scroller = apiRef.current.virtualScrollerRef.current;\n    const scrollbar = scrollbarRef.current;\n    if (scroller[propertyScroll] === lastPosition.current) {\n      return;\n    }\n    if (isLocked.current) {\n      isLocked.current = false;\n      return;\n    }\n    isLocked.current = true;\n    const value = scroller[propertyScroll] / contentSize;\n    scrollbar[propertyScroll] = value * scrollbarInnerSize;\n    lastPosition.current = scroller[propertyScroll];\n  });\n  const onScrollbarScroll = useEventCallback(() => {\n    const scroller = apiRef.current.virtualScrollerRef.current;\n    const scrollbar = scrollbarRef.current;\n    if (isLocked.current) {\n      isLocked.current = false;\n      return;\n    }\n    isLocked.current = true;\n    const value = scrollbar[propertyScroll] / scrollbarInnerSize;\n    scroller[propertyScroll] = value * contentSize;\n  });\n  useOnMount(() => {\n    const scroller = apiRef.current.virtualScrollerRef.current;\n    const scrollbar = scrollbarRef.current;\n    scroller.addEventListener('scroll', onScrollerScroll, {\n      capture: true\n    });\n    scrollbar.addEventListener('scroll', onScrollbarScroll, {\n      capture: true\n    });\n    return () => {\n      scroller.removeEventListener('scroll', onScrollerScroll, {\n        capture: true\n      });\n      scrollbar.removeEventListener('scroll', onScrollbarScroll, {\n        capture: true\n      });\n    };\n  });\n  React.useEffect(() => {\n    const content = contentRef.current;\n    content.style.setProperty(propertyDimension, `${scrollbarInnerSize}px`);\n  }, [scrollbarInnerSize, propertyDimension]);\n  const Container = props.position === 'vertical' ? ScrollbarVertical : ScrollbarHorizontal;\n  return /*#__PURE__*/_jsx(Container, {\n    ref: useForkRef(ref, scrollbarRef),\n    className: classes.root,\n    tabIndex: -1,\n    children: /*#__PURE__*/_jsx(Content, {\n      ref: contentRef,\n      className: classes.content\n    })\n  });\n});\nexport { GridVirtualScrollbar };"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}